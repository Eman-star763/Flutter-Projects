// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const binding = flutter_sdk.src__widgets__binding;
  const app = flutter_sdk.src__material__app;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const colors = flutter_sdk.src__material__colors;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const text_input = flutter_sdk.src__services__text_input;
  const framework = flutter_sdk.src__widgets__framework;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const material_button = flutter_sdk.src__material__material_button;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var MyApp = Object.create(dart.library);
  var MyWork = Object.create(dart.library);
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    StringTovoid: () => (T.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 10,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 10
      });
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = [
    "file:///zapp/project/lib/Screens/MyApp.dart",
    "file:///zapp/project/lib/Screens/MyWork.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.main = function main$0() {
    binding.runApp(new app.MaterialApp.new({home: new MyWork.MyWork.new(), debugShowCheckedModeBanner: false}));
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  MyApp.MyWidget = class MyWidget extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new MyApp.MyWidget.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("TextFormField")}), body: new basic.Padding.new({padding: C[1] || CT.C1, child: new basic.Column.new({children: T.JSArrayOfWidget().of([new text_form_field.TextFormField.new({decoration: new input_decorator.InputDecoration.new({hintText: "Username", prefix: new icon.Icon.new(icons.Icons.person)})}), new basic.SizedBox.new({height: 10}), new text_form_field.TextFormField.new({decoration: new input_decorator.InputDecoration.new({border: new input_border.OutlineInputBorder.new(), focusedBorder: new input_border.OutlineInputBorder.new({borderSide: new borders.BorderSide.new({color: colors.Colors.red}), borderRadius: new border_radius.BorderRadius.circular(40)})})}), new basic.SizedBox.new({height: 10}), new text_form_field.TextFormField.new({decoration: new input_decorator.InputDecoration.new({enabled: true, enabledBorder: new input_border.OutlineInputBorder.new({borderSide: new borders.BorderSide.new({color: colors.Colors.green})})})}), new basic.SizedBox.new({height: 10}), new text_form_field.TextFormField.new({decoration: new input_decorator.InputDecoration.new({enabled: false, disabledBorder: new input_border.OutlineInputBorder.new({borderSide: new borders.BorderSide.new({color: colors.Colors.yellow})})})}), new basic.SizedBox.new({height: 10}), new text_form_field.TextFormField.new({maxLength: 10}), new basic.SizedBox.new({height: 10}), new text_form_field.TextFormField.new({keyboardType: text_input.TextInputType.text, maxLines: 3, minLines: 1})])})})});
    }
  };
  (MyApp.MyWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    MyApp.MyWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = MyApp.MyWidget.prototype;
  dart.addTypeTests(MyApp.MyWidget);
  dart.addTypeCaches(MyApp.MyWidget);
  dart.setMethodSignature(MyApp.MyWidget, () => ({
    __proto__: dart.getMethods(MyApp.MyWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(MyApp.MyWidget, I[0]);
  MyWork.MyWork = class MyWork$ extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new MyWork.MyWork.new({key: key});
    }
    createState() {
      return new MyWork._MyWorkState.new();
    }
  };
  (MyWork.MyWork.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    MyWork.MyWork.__proto__.new.call(this, {key: key});
    ;
  }).prototype = MyWork.MyWork.prototype;
  dart.addTypeTests(MyWork.MyWork);
  dart.addTypeCaches(MyWork.MyWork);
  dart.setMethodSignature(MyWork.MyWork, () => ({
    __proto__: dart.getMethods(MyWork.MyWork.__proto__),
    createState: dart.fnType(framework.State$(MyWork.MyWork), [])
  }));
  dart.setLibraryUri(MyWork.MyWork, I[1]);
  MyWork._MyWorkState = class _MyWorkState extends framework.State$(MyWork.MyWork) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("MyEditingController")}), body: new basic.Column.new({children: T.JSArrayOfWidget().of([new text_form_field.TextFormField.new({controller: this.username}), new material_button.MaterialButton.new({color: colors.Colors.red, textColor: colors.Colors.black, onPressed: dart.fn(() => {
                core.print(this.username.text);
              }, T.VoidTovoid()), child: new text.Text.new("print")}), new text_form_field.TextFormField.new({onChanged: dart.fn(Val => {
                core.print(Val);
              }, T.StringTovoid())})])})});
    }
    static ['_#new#tearOff']() {
      return new MyWork._MyWorkState.new();
    }
  };
  (MyWork._MyWorkState.new = function() {
    this.username = new editable_text.TextEditingController.new();
    MyWork._MyWorkState.__proto__.new.call(this);
    ;
  }).prototype = MyWork._MyWorkState.prototype;
  dart.addTypeTests(MyWork._MyWorkState);
  dart.addTypeCaches(MyWork._MyWorkState);
  dart.setMethodSignature(MyWork._MyWorkState, () => ({
    __proto__: dart.getMethods(MyWork._MyWorkState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(MyWork._MyWorkState, I[1]);
  dart.setFieldSignature(MyWork._MyWorkState, () => ({
    __proto__: dart.getFields(MyWork._MyWorkState.__proto__),
    username: dart.fieldType(editable_text.TextEditingController)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/Screens/MyApp.dart": MyApp,
    "file:///zapp/project/lib/Screens/MyWork.dart": MyWork
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/Screens/MyApp.dart","/zapp/project/lib/Screens/MyWork.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CI,IA1BF,iCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;AC5CG,IALD,eACE,+BACO,qDACuB;EAGlC;;ECLwB;;;;;;;;;;UCCI;AACxB,YAAO,oCACG,+BACC,kBAAK,0BAGV,sDAEG,gCACK,wBACR,mDACc,mDACA,oBACF,kBAAW,yBAGvB,gCACU,MAEV,mDACc,iDACF,0DACO,qDACD,mCAAyB,mCAEV,wCAAS,WAI1C,gCAAgB,MAChB,mDACc,kDACD,qBACM,qDAA+B,mCAAwB,6BAG1E,gCAAiB,MACjB,mDAEe,kDACF,uBACO,qDACF,mCACG,8BAKrB,gCACU,MAEV,kDACW,MAEX,gCACU,MAEV,qDAC8B,yCAClB,aACA;IAOpB;;;QAtEsB;AAAhB,kDAAgB,GAAG;;EAAE;;;;;;;;;;;;;;ACGI;IAAc;;;QAH9B;AAAd,iDAAc,GAAG;;EAAE;;;;;;;;;UAUM;AACxB,YAAO,oCACC,+BACC,kBAAK,gCAER,gCACI,wBACR,mDACc,iBAEd,+CACgB,8BACI,gCACP;AACW,gBAApB,WAAM,AAAS;yCAEZ,kBAAK,YAEZ,kDACa,QAAC;AACA,gBAAV,WAAM,GAAG;;IAMjB;;;;;;IA5BwB,gBAAc;;;EA6BxC","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__Screens__MyApp: MyApp,
    zapp__project__lib__Screens__MyWork: MyWork
  };
}));

//# sourceMappingURL=main.js.map
