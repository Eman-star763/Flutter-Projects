// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const binding = flutter_sdk.src__widgets__binding;
  const app = flutter_sdk.src__material__app;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const framework = flutter_sdk.src__widgets__framework;
  const form = flutter_sdk.src__widgets__form;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text = flutter_sdk.src__widgets__text;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var MyApp = Object.create(dart.library);
  var $toString = dartx.toString;
  var $isEmpty = dartx.isEmpty;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    GlobalKeyOfFormState: () => (T.GlobalKeyOfFormState = dart.constFn(framework.GlobalKey$(form.FormState)))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))(),
    StringNToStringN: () => (T.StringNToStringN = dart.constFn(dart.fnType(T.StringN(), [T.StringN()])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 50,
        [EdgeInsets_right]: 50,
        [EdgeInsets_top]: 50,
        [EdgeInsets_left]: 50
      });
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = ["file:///zapp/project/lib/Screens/MyApp.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.main = function main$0() {
    binding.runApp(new app.MaterialApp.new({home: new MyApp.MyApp.new(), debugShowCheckedModeBanner: false}));
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  var name = dart.privateName(MyApp, "MyApp.name");
  var pass = dart.privateName(MyApp, "MyApp.pass");
  var formkey = dart.privateName(MyApp, "MyApp.formkey");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  MyApp.MyApp = class MyApp$ extends framework.StatelessWidget {
    get name() {
      return this[name];
    }
    set name(value) {
      this[name] = value;
    }
    get pass() {
      return this[pass];
    }
    set pass(value) {
      this[pass] = value;
    }
    get formkey() {
      return this[formkey];
    }
    set formkey(value) {
      super.formkey = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new MyApp.MyApp.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Form")}), body: new basic.Padding.new({padding: C[1] || CT.C1, child: new form.Form.new({key: this.formkey, child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([new text_form_field.TextFormField.new({autovalidateMode: form.AutovalidateMode.always, controller: this.name, decoration: new input_decorator.InputDecoration.new({hintText: "Enter name", label: new text.Text.new("Name"), border: new input_border.OutlineInputBorder.new({borderSide: new borders.BorderSide.new({width: 2})})}), validator: dart.fn(data => {
                    if (dart.nullCheck(data)[$isEmpty]) {
                      return "This field is required";
                    }
                  }, T.StringNToStringN())}), new basic.SizedBox.new({height: 10}), new text_form_field.TextFormField.new({obscureText: true, controller: this.pass, decoration: new input_decorator.InputDecoration.new({hintText: "Enter password", label: new text.Text.new("password"), border: new input_border.OutlineInputBorder.new({borderSide: new borders.BorderSide.new({width: 2})})}), validator: dart.fn(data => {
                    if (dart.nullCheck(data)[$isEmpty]) {
                      return "This field is required";
                    }
                  }, T.StringNToStringN())}), new basic.SizedBox.new({height: 10}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                    if (dart.nullCheck(this.formkey.currentState).validate()) {
                      core.print(this.name.text);
                      core.print(this.pass.text);
                    }
                  }, T.VoidTovoid()), child: new text.Text.new("Login")})])})})})});
    }
  };
  (MyApp.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    this[name] = new editable_text.TextEditingController.new();
    this[pass] = new editable_text.TextEditingController.new();
    this[formkey] = T.GlobalKeyOfFormState().new();
    MyApp.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = MyApp.MyApp.prototype;
  dart.addTypeTests(MyApp.MyApp);
  dart.addTypeCaches(MyApp.MyApp);
  dart.setMethodSignature(MyApp.MyApp, () => ({
    __proto__: dart.getMethods(MyApp.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(MyApp.MyApp, I[0]);
  dart.setFieldSignature(MyApp.MyApp, () => ({
    __proto__: dart.getFields(MyApp.MyApp.__proto__),
    name: dart.fieldType(editable_text.TextEditingController),
    pass: dart.fieldType(editable_text.TextEditingController),
    formkey: dart.finalFieldType(framework.GlobalKey$(form.FormState))
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/Screens/MyApp.dart": MyApp
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/Screens/MyApp.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CI,IA1BF,iCAAgB;AACd,UAAoB,6BAGD;AAF8B,QAA9B,AAAkB,6BAElB,eAF2B;;AAEL,QAAF,CAApB;;AAEnB,UAAO,AAAQ,uBAAY;AAKvB,QAJK,AAAqC,qBAA7B,qCAAuB,uBAAW,QAAC;AAG9C,UAFC,AAAQ,sBAAW,2BAA2B,CAC/C;;;wBAIL,SAAC,GAAG;AACL,UAAO,AAAQ,uBAAY;AAIvB,QAHC,AAAQ,sBAAW,wBAAwB,CAC5C,AAAE,CAAD,eACD,AAAW,UAAD;;2DAGM,yCACb,SAAC,MAAM,QAAQ,MAAM;AAC1B,cAAO,AAAQ,uBAAY;AAC4B,YAAlD,AAAQ,sBAAW,wBAAwB,CAAC,IAAI;;;EAI3D;;AAEiB;AAQd,MAPD,MAAS,gCACC;AACS,UAAf;6CAEe;AACmB,UAAjB;;IAGvB;;;AC7CG,IALD,eACE,+BACO,mDACuB;EAGlC;;ECJwB;;;;;;;;;ICClB;;;;;;IACA;;;;;;IACE;;;;;;;;;;UAEoB;AACxB,YAAO,oCACG,+BACC,kBAAK,iBAET,sDAEI,wBACA,qBACE,yCACgC,yCAC3B,wBACR,yDACqC,0CACzB,uBACA,mDACA,qBACH,kBAAK,iBACJ,qDAA+B,mCAAkB,oBAE1C,QAAC;AACV,wBAAO,AAAE,eAAN,IAAI;AACL,4BAAO;;8CAKjB,gCAAiB,MACjB,oDACe,kBACD,uBACA,mDACA,yBACH,kBAAK,qBACJ,qDACM,mCAAkB,oBAGzB,QAAC;AACV,wBAAO,AAAE,eAAN,IAAI;AACL,4BAAO;;8CAKX,gCAAiB,MACjB,mDACa;AACX,wBAAuB,AAAE,eAAtB,AAAQ;AACY,sBAArB,WAAS,AAAK;AACO,sBAArB,WAAS,AAAK;;6CAGX,kBAAK;IAMxB;;;QAlEc;IAGV,aAAK;IACL,aAAK;IACH,gBAAQ;AALb,+CAAa,GAAG;;EAAE","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__Screens__MyApp: MyApp
  };
}));

//# sourceMappingURL=main.js.map
